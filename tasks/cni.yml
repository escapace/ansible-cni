---

- name: create cni directories
  ansible.builtin.file:
    owner: root
    group: root
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - "/opt/cni"
    - "/opt/cni/bin"
    - "/opt/cni/run"
    - "/opt/cni/config"

- name: check cni version
  ansible.builtin.slurp:
    src: /opt/cni/version
  register: cni_current_vesion
  changed_when: false
  ignore_errors: true

- name: install cni
  when: cni_current_vesion.failed or cni_current_vesion['content'] | b64decode != cni_archive
  block:
    - name: download cni
      ansible.builtin.get_url:
        url: "{{ cni_url_archive }}"
        dest: "/tmp/{{ cni_archive }}"
        checksum: "sha512:{{ cni_url_archive_checksum }}"
        mode: 0755
        owner: root
        group: root

    - name: extract cni
      ansible.builtin.unarchive:
        src: "/tmp/{{ cni_archive }}"
        dest: "/opt/cni/bin"
        mode: 0755
        owner: root
        group: root
        setype: bin_t
        seuser: system_u
        remote_src: true

    - name: cleanup
      ansible.builtin.file:
        path: "/tmp/{{ cni_archive }}"
        state: "absent"

    - name: write version
      ansible.builtin.copy:
        content: "{{ cni_archive }}"
        dest: /opt/cni/version
        owner: root
        group: root
        mode: '0644'
